name: Build & Publish CentralDashboard Docker image
on:
  push:  
    branches:
      - main
      - master
      - v*-branch
    paths:
      - components/centraldashboard/**
      - releasing/version/VERSION

env:
  IMG: ghcr.io/kubeflow/kubeflow/central-dashboard
  ARCH: linux/amd64,linux/ppc64le,linux/arm64/v8

jobs:
  push_to_registry:
    name: Build & Push Docker image to GHCR
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - uses: dorny/paths-filter@v3
      id: filter
      with:
        base: ${{ github.ref }}
        filters: |
          version:
            - 'releasing/version/VERSION'
    - name: Set registry and credentials  # To be removed
      id: registry
      run: |
        if [[ "${GITHUB_REPOSITORY}" == "kubeflow/dashboard" ]]; then
          echo "registry=ghcr.io" >> $GITHUB_OUTPUT
          echo "username=${{ github.actor }}" >> $GITHUB_OUTPUT
          echo "password=${{ secrets.GITHUB_TOKEN }}" >> $GITHUB_OUTPUT
          echo "image=ghcr.io/kubeflow/dashboard" >> $GITHUB_OUTPUT
        else
          echo "registry=${{ secrets.FORK_REGISTRY || 'ghcr.io' }}" >> $GITHUB_OUTPUT
          echo "username=${{ secrets.FORK_REGISTRY_USERNAME }}" >> $GITHUB_OUTPUT
          echo "password=${{ secrets.FORK_REGISTRY_PASSWORD }}" >> $GITHUB_OUTPUT
          echo "image=${{ secrets.FORK_IMAGE || format('ghcr.io/{0}/dashboard-fork', github.actor) }}" >> $GITHUB_OUTPUT
        fi
    - name: Login to GHCR
      uses: docker/login-action@v3
      with:
        registry: ${{ steps.registry.outputs.registry }} #ghcr.io
        username: ${{ steps.registry.outputs.username }} #${{ github.actor }}
        password: ${{ steps.registry.outputs.password }} #${{ secrets.GITHUB_TOKEN }}

    - name: Setup QEMU
      uses: docker/setup-qemu-action@v3

    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build and push multi-arch docker image
        # ARCH=linux/amd64 make docker-build-multi-arch        # Commented out old command
        # ARCH=linux/ppc64le make docker-build-multi-arch      # Commented out old command
        # ARCH=linux/arm64/v8 make docker-build-multi-arch     # Commented out old command
        # make docker-build-push-multi-arch                    # Commented out old command
      run: |
        cd components/centraldashboard
        ARCH=linux/amd64 make IMG=${{ steps.registry.outputs.image }} docker-build-multi-arch
        ARCH=linux/ppc64le make IMG=${{ steps.registry.outputs.image }} docker-build-multi-arch
        ARCH=linux/arm64/v8 make IMG=${{ steps.registry.outputs.image }} docker-build-multi-arch
        make IMG=${{ steps.registry.outputs.image }} docker-build-push-multi-arch

    - name: Build and push latest multi-arch docker image
      if: github.ref == 'refs/heads/master'
      # make docker-build-push-multi-arch
      run: |
        export TAG=latest
        cd components/centraldashboard
        make IMG=${{ steps.registry.outputs.image }} docker-build-push-multi-arch 

    - name: Build and push multi-arch docker image on Version change
      id: version
      if: steps.filter.outputs.version == 'true'
      # make docker-build-push-multi-arch
      run: |
        export TAG=$(cat releasing/version/VERSION)
        cd components/centraldashboard
        make IMG=${{ steps.registry.outputs.image }} docker-build-push-multi-arch 